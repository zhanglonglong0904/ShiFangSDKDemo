plugins {
    id 'com.android.application'
}

def ext = rootProject.ext
def sdkVersion = ext.versions
def sdkDependency = ext.coreDependencies

android {
    signingConfigs {
        sign {
            storeFile file('123123.jks')
            storePassword '123123'
            keyAlias 'key'
            keyPassword '123123'
        }
    }
    compileSdkVersion 28
    buildToolsVersion "28.0.2"

    defaultConfig {
        applicationId "com.shifang.weight.demo"
        minSdkVersion sdkVersion.minSdkVersion
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a'// , 'arm64-v8a'    //指定只生成这两种的so，否则可能会出现x86/x86_64，导致找不到JNI函数
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled true
            debuggable true
            jniDebuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
        release {
            minifyEnabled false
            zipAlignEnabled true
            debuggable false
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    packagingOptions {
        pickFirst 'lib/*/lib*.so'
        pickFirst 'libs/*/lib*.so'

        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
//        exclude 'META-INF/androidx.drawerlayout_drawerlayout.version'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    // SDK 需要的依赖
    implementation sdkDependency.gson
    implementation sdkDependency.fastjson
    implementation sdkDependency.retrofit
    implementation sdkDependency.converter_gson
    implementation sdkDependency.pytorch_android
    implementation sdkDependency.pytorch_android_torchvision
    implementation sdkDependency.commons_io
    implementation sdkDependency.aliyun_oss
    // SDK 需要的依赖

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

//    implementation 'com.kongzue.dialog_v3:dialog:3.1.8'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
}
